//! > Test destructure after merge.

//! > test_runner_name
test_cancel_ops

//! > function
fn foo(a: felt252) -> felt252 {
   let tuple = match a {
      0 => (1, 2),
      _ => {
        let tuple = (a, 2);
        use_tuple(tuple);
        use_tuple(tuple);
        tuple
      },
   };
   use_tuple(tuple);
   let (b, c) = tuple;
   b + c
}

//! > function_name
foo

//! > module_code
extern fn use_tuple(a: (felt252, felt252)) nopanic;

//! > semantic_diagnostics

//! > lowering_diagnostics

//! > before
Parameters: v0: core::felt252
blk0 (root):
Statements:
End:
  Match(match core::felt252_is_zero(v0) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v1) => blk2,
  })

blk1:
Statements:
  (v2: core::felt252) <- 1u
  (v3: core::felt252) <- 2u
  (v4: (core::felt252, core::felt252)) <- struct_construct(v2, v3)
End:
  Goto(blk3, {v4 -> v7})

blk2:
Statements:
  (v5: core::felt252) <- 2u
  (v6: (core::felt252, core::felt252)) <- struct_construct(v0, v5)
  () <- test::use_tuple(v6)
  () <- test::use_tuple(v6)
End:
  Goto(blk3, {v6 -> v7})

blk3:
Statements:
  () <- test::use_tuple(v7)
  (v8: core::felt252, v9: core::felt252) <- struct_destructure(v7)
  (v11: core::felt252) <- core::felt252_add(v8, v9)
End:
  Return(v11)

//! > after
Parameters: v0: core::felt252
blk0 (root):
Statements:
End:
  Match(match core::felt252_is_zero(v0) {
    IsZeroResult::Zero => blk1,
    IsZeroResult::NonZero(v1) => blk2,
  })

blk1:
Statements:
  (v2: core::felt252) <- 1u
  (v3: core::felt252) <- 2u
End:
  Goto(blk3, {v2 -> v8, v3 -> v9})

blk2:
Statements:
  (v5: core::felt252) <- 2u
  (v6: (core::felt252, core::felt252)) <- struct_construct(v0, v5)
  () <- test::use_tuple(v6)
  () <- test::use_tuple(v6)
End:
  Goto(blk3, {v0 -> v8, v5 -> v9})

blk3:
Statements:
  (v7: (core::felt252, core::felt252)) <- struct_construct(v8, v9)
  () <- test::use_tuple(v7)
  (v11: core::felt252) <- core::felt252_add(v8, v9)
End:
  Return(v11)
